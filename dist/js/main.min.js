"use strict";var user=require("./contact.js"),user2=require("./contact.min.js"),getFullName=(console.log("main js file"),console.log(user2),require("./contact.js")),body=(console.log(getFullName("John","Doe")),sayHello(),document.querySelector("body")),html=document.querySelector("html"),nav=document.querySelector(".main-wrapper"),burgerBtn=document.querySelector(".nav__btn"),menuOpen=!1,sideMenu=document.querySelector(".side-menu"),sideMenuNavList=sideMenu.querySelector(".nav__list"),sideMenuListLink=sideMenuNavList.querySelectorAll("a.nav__list-link"),logo=document.querySelector(".logo__link"),year=document.getElementById("year"),menuItems=document.querySelectorAll(".nav__list-link"),scrollSpySections=document.querySelectorAll(".scroll-section"),cookieBox=document.querySelector(".cookie"),cookieBtn=document.querySelector(".cookie__btn"),showCookie=function(){localStorage.getItem("cookie")&&cookieBox.classList.add("cookiehide")},handleCookieBox=function(){localStorage.setItem("cookie","true"),cookieBox.classList.add("cookiehide")},showYear=function(){var e=new Date;year.textContent=e.getFullYear()},handleScrollSpy=function(){var o;document.body.classList.contains("main-page")&&(o=[],scrollSpySections.forEach(function(e){window.scrollY<=e.offsetTop+e.offsetHeight-103&&(o.push(e.id),e=document.querySelector('[href*="'.concat(o[0],'"]')),menuItems.forEach(function(e){return e.classList.remove("active")}),e.classList.add("active"))}))},closingSideMenu=function(){sideMenu.classList.remove("show"),body.classList.remove("bodyHidden"),menuOpen=!1,burgerBtn.classList.remove("open")};burgerBtn.addEventListener("click",function(){body.classList.toggle("bodyHidden"),sideMenu.classList.toggle("show"),menuOpen=!menuOpen,burgerBtn.classList.toggle("open",menuOpen)}),window.addEventListener("click",function(e){e.target!==sideMenu&&e.target!==sideMenuNavList&&e.target!==nav&&e.target!==logo||closingSideMenu()}),window.addEventListener("scroll",handleScrollSpy),cookieBtn.addEventListener("click",handleCookieBox),sideMenuListLink.forEach(function(e){return e.addEventListener("click",closingSideMenu)}),showYear(),showCookie();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsidXNlciIsInJlcXVpcmUiLCJ1c2VyMiIsImNvbnNvbGUiLCJsb2ciLCJib2R5Iiwic2F5SGVsbG8iLCJnZXRGdWxsTmFtZSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImh0bWwiLCJuYXYiLCJidXJnZXJCdG4iLCJtZW51T3BlbiIsInNpZGVNZW51Iiwic2lkZU1lbnVOYXZMaXN0Iiwic2lkZU1lbnVMaXN0TGluayIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJsb2dvIiwieWVhciIsImdldEVsZW1lbnRCeUlkIiwibWVudUl0ZW1zIiwic2Nyb2xsU3B5U2VjdGlvbnMiLCJjb29raWVCb3giLCJjb29raWVCdG4iLCJzaG93Q29va2llIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsImNsYXNzTGlzdCIsImFkZCIsImhhbmRsZUNvb2tpZUJveCIsInNldEl0ZW0iLCJzaG93WWVhciIsInRvZGF5IiwiRGF0ZSIsInRleHRDb250ZW50IiwiZ2V0RnVsbFllYXIiLCJoYW5kbGVTY3JvbGxTcHkiLCJzZWN0aW9ucyIsImNvbnRhaW5zIiwiZm9yRWFjaCIsInNlY3Rpb24iLCJ3aW5kb3ciLCJwdXNoIiwiY29uY2F0IiwiaXRlbSIsInJlbW92ZSIsImFjdGl2ZVNlY3Rpb24iLCJ0b2dnbGUiLCJhZGRFdmVudExpc3RlbmVyIiwidGFyZ2V0IiwiY2xvc2luZ1NpZGVNZW51IiwiZSIsImxpbmsiXSwibWFwcGluZ3MiOiJhQUNBLElBQU1BLEtBQU9DLFFBQVEsY0FBYyxFQURuQ0MsTUFBQUQsUUFBQSxrQkFBQSxFQUdBRSxhQUZBQSxRQUFVQyxJQUFHSCxjQUFRLEVBQ3JCRSxRQUFNRCxJQUFRRCxLQUFBQSxFQUNGQSxRQUFlLGNBQUEsR0FPckJJLE1BTk5GLFFBQVFDLElBQUlGLFlBQU0sT0FBQSxLQUFBLENBQUEsRUFDbEJJLFNBQU1DLEVBS09DLFNBQVNDLGNBQWMsTUFBTyxHQUNyQ0MsS0FBT0YsU0FBU0MsY0FBYyxNQUFPLEVBQ3JDRSxJQUFNSCxTQUFTQyxjQUFjLGVBQWdCLEVBQzdDRyxVQUFZSixTQUFTQyxjQUFjLFdBQVksRUFDakRJLFNBQVcsQ0FBQSxFQUNUQyxTQUFXTixTQUFTQyxjQUFjLFlBQWEsRUFDL0NNLGdCQUFrQkQsU0FBU0wsY0FBYyxZQUFhLEVBQ3RETyxpQkFBbUJELGdCQUFnQkUsaUJBQWlCLGtCQUFtQixFQUN2RUMsS0FBT1YsU0FBU0MsY0FBYyxhQUFjLEVBQzVDVSxLQUFPWCxTQUFTWSxlQUFlLE1BQU8sRUFDdENDLFVBQVliLFNBQVNTLGlCQUFpQixpQkFBa0IsRUFDeERLLGtCQUFvQmQsU0FBU1MsaUJBQWlCLGlCQUFrQixFQUNoRU0sVUFBWWYsU0FBU0MsY0FBYyxTQUFVLEVBQzdDZSxVQUFZaEIsU0FBU0MsY0FBYyxjQUFlLEVBSWxEZ0IsV0FBYSxXQUNRQyxhQUFhQyxRQUFRLFFBQVMsR0FFdkRKLFVBQUFBLFVBQVVLLElBQVVDLFlBQUksQ0FFMUIsRUFDTUMsZ0JBQWtCLFdBQ3ZCSixhQUFZSyxRQUFRLFNBQVMsTUFBRSxFQUMvQlIsVUFBU0ssVUFBVUMsSUFBSSxZQUFDLENBQ3pCLEVBSU1HLFNBQVcsV0FDaEIsSUFBTUMsRUFBUSxJQUFJQyxLQUNsQmYsS0FBSWdCLFlBQVlGLEVBQVFHLFlBQVksQ0FDckMsRUFJTUMsZ0JBQWtCLFdBQ3ZCLElBQ09DLEVBRFA5QixTQUFZSCxLQUFLdUIsVUFBVVcsU0FBUyxXQUFDLElBQzlCRCxFQUFXLEdBQ2pCaEIsa0JBQUFBLFFBQWtCa0IsU0FBT0MsR0FDeEJDLE9BQUlBLFNBQWNELEVBQUlBLFVBQWlCQSxFQUFHQSxhQUFvQixNQUM3REgsRUFBQUEsS0FBU0ssRUFBS0YsRUFBQUEsRUFNZHBCLEVBQWtCYixTQUFBQyxjQUFLLFdBQUFtQyxPQUFBTixFQUFVVixHQUFBQSxJQUFBQSxDQUZqQyxFQUVBUCxVQUdEbUIsUUFBQSxTQUFBSyxHQUFBLE9BQUFBLEVBQUFqQixVQUFBa0IsT0FBQSxRQUFBLENBQUEsQ0FBQSxFQUVGQyxFQUFBbkIsVUFBQUMsSUFBQSxRQUFBLEVBR0QsQ0FBQSxFQUZBLEVBTUNqQixnQkFBb0JrQyxXQUNwQmhDLFNBQUFjLFVBQUFrQixPQUFBLE1BQUEsRUFIQXpDLEtBQUt1QixVQUFVa0IsT0FBTyxZQUFZLEVBS25DakMsU0FBQSxDQUFBLEVBQ0FELFVBQUFnQixVQUFBa0IsT0FBQSxNQUFBLENBQ0EsRUE4R0FsQyxVQUlDQSxpQkFBb0JvQyxRQUFhLFdBQ2pDM0MsS0FBQ3VCLFVBQUFvQixPQUFBLFlBQUEsRUFDRk4sU0FBT08sVUFBQUEsT0FBaUIsTUFBUyxFQUhoQ3BDLFNBS0dxQyxDQUFBQSxTQUpIdEMsVUFTQ3VDLFVBQWlCSCxPQUFBLE9BQUFuQyxRQUFBLENBUm5CLENBQUMsRUFVRDZCLE9BQUVPLGlCQUFBLFFBQUEsU0FBQUcsR0FFRjVCLEVBQUFBLFNBQVV5QixVQUNWakMsRUFBQUEsU0FBQUEsaUJBQThCb0MsRUFBQUYsU0FDeEJELEtBQ0xHLEVBQUFGLFNBQUFoQyxNQUVEaUMsZ0JBQUEsQ0FFQSxDQUFBLEVBQ0FuQixPQUFBQSxpQkFBVSxTQUFBSyxlQUFBLEVBQ1ZaLFVBQVV3QixpQkFBRSxRQUFBbkIsZUFBQSxFQVJaZCxpQkFBaUJ3QixRQUFRLFNBQUNhLEdBQUksT0FDN0JBLEVBQUtKLGlCQUFpQixRQUFTRSxlQUFlLENBQUMsQ0FDaEQsRUFLQW5CLFNBQVMsRUFDVFAsV0FBVyIsImZpbGUiOiJtYWluLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGltcG9ydCB7IHVzZXIsIHNheUhlbGxvIH0gZnJvbSAnLi4vLi4vZGlzdC9qcy9jb250YWN0Lm1pbi5qcyc7XHJcbmNvbnN0IHVzZXIgPSByZXF1aXJlKCcuL2NvbnRhY3QuanMnKTtcclxuY29uc3QgdXNlcjIgPSByZXF1aXJlKCcuL2NvbnRhY3QubWluLmpzJyk7XHJcbmNvbnNvbGUubG9nKCdtYWluIGpzIGZpbGUnKTtcclxuY29uc29sZS5sb2codXNlcjIpO1xyXG5jb25zdCBnZXRGdWxsTmFtZSA9IHJlcXVpcmUoJy4vY29udGFjdC5qcycpO1xyXG5jb25zb2xlLmxvZyhnZXRGdWxsTmFtZSgnSm9obicsICdEb2UnKSk7XHJcbnNheUhlbGxvKCk7XHJcblxyXG5cclxuY29uc3QgYm9keSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2JvZHknKTtcclxuY29uc3QgaHRtbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2h0bWwnKTtcclxuY29uc3QgbmF2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1haW4td3JhcHBlcicpO1xyXG5jb25zdCBidXJnZXJCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubmF2X19idG4nKTtcclxubGV0IG1lbnVPcGVuID0gZmFsc2U7XHJcbmNvbnN0IHNpZGVNZW51ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNpZGUtbWVudScpO1xyXG5jb25zdCBzaWRlTWVudU5hdkxpc3QgPSBzaWRlTWVudS5xdWVyeVNlbGVjdG9yKCcubmF2X19saXN0Jyk7XHJcbmNvbnN0IHNpZGVNZW51TGlzdExpbmsgPSBzaWRlTWVudU5hdkxpc3QucXVlcnlTZWxlY3RvckFsbCgnYS5uYXZfX2xpc3QtbGluaycpO1xyXG5jb25zdCBsb2dvID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmxvZ29fX2xpbmsnKTtcclxuY29uc3QgeWVhciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd5ZWFyJyk7XHJcbmNvbnN0IG1lbnVJdGVtcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5uYXZfX2xpc3QtbGluaycpO1xyXG5jb25zdCBzY3JvbGxTcHlTZWN0aW9ucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5zY3JvbGwtc2VjdGlvbicpO1xyXG5jb25zdCBjb29raWVCb3ggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY29va2llJyk7XHJcbmNvbnN0IGNvb2tpZUJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb29raWVfX2J0bicpO1xyXG5cclxuLy8gQ09PS0lFUyBIQU5ETEVcclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5jb25zdCBzaG93Q29va2llID0gKCkgPT4ge1xyXG5cdGNvbnN0IGNvb2tpZUFjY2VwdGF0aW9uID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2Nvb2tpZScpO1xyXG5cdGlmIChjb29raWVBY2NlcHRhdGlvbikge1xyXG5cdFx0Y29va2llQm94LmNsYXNzTGlzdC5hZGQoJ2Nvb2tpZWhpZGUnKTtcclxuXHR9XHJcbn07XHJcbmNvbnN0IGhhbmRsZUNvb2tpZUJveCA9ICgpID0+IHtcclxuXHRsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnY29va2llJywgJ3RydWUnKTtcclxuXHRjb29raWVCb3guY2xhc3NMaXN0LmFkZCgnY29va2llaGlkZScpO1xyXG59O1xyXG5cclxuLy9SRUZSRVNIIFlFQVIgSU4gRk9PVEVSXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuY29uc3Qgc2hvd1llYXIgPSAoKSA9PiB7XHJcblx0Y29uc3QgdG9kYXkgPSBuZXcgRGF0ZSgpO1xyXG5cdHllYXIudGV4dENvbnRlbnQgPSB0b2RheS5nZXRGdWxsWWVhcigpO1xyXG59O1xyXG5cclxuLy8gU0NST0xMU1BZXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuY29uc3QgaGFuZGxlU2Nyb2xsU3B5ID0gKCkgPT4ge1xyXG5cdGlmIChkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5jb250YWlucygnbWFpbi1wYWdlJykpIHtcclxuXHRcdGNvbnN0IHNlY3Rpb25zID0gW107XHJcblx0XHRzY3JvbGxTcHlTZWN0aW9ucy5mb3JFYWNoKChzZWN0aW9uKSA9PiB7XHJcblx0XHRcdGlmICh3aW5kb3cuc2Nyb2xsWSA8PSBzZWN0aW9uLm9mZnNldFRvcCArIHNlY3Rpb24ub2Zmc2V0SGVpZ2h0IC0gMTAzKSB7XHJcblx0XHRcdFx0c2VjdGlvbnMucHVzaChzZWN0aW9uLmlkKTtcclxuXHJcblx0XHRcdFx0Y29uc3QgYWN0aXZlU2VjdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcblx0XHRcdFx0XHRgW2hyZWYqPVwiJHtzZWN0aW9uc1swXX1cIl1gXHJcblx0XHRcdFx0KTtcclxuXHJcblx0XHRcdFx0bWVudUl0ZW1zLmZvckVhY2goKGl0ZW0pID0+IGl0ZW0uY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJykpO1xyXG5cclxuXHRcdFx0XHRhY3RpdmVTZWN0aW9uLmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpO1xyXG5cdFx0XHR9XHJcblx0XHR9KTtcclxuXHR9XHJcbn07XHJcblxyXG5jb25zdCBjbG9zaW5nU2lkZU1lbnUgPSAoKSA9PiB7XHJcblx0c2lkZU1lbnUuY2xhc3NMaXN0LnJlbW92ZSgnc2hvdycpO1xyXG5cdGJvZHkuY2xhc3NMaXN0LnJlbW92ZSgnYm9keUhpZGRlbicpO1xyXG5cdG1lbnVPcGVuID0gZmFsc2U7XHJcblx0YnVyZ2VyQnRuLmNsYXNzTGlzdC5yZW1vdmUoJ29wZW4nKTtcclxufTtcclxuXHJcbi8vIC8vIElGIENPTlRBQ1QgUEFHRSAtPiBGT1JNIFZBTElEQVRJT05cclxuLy8gLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyBjb25zdCB3aGF0c1BhZ2UgPSAoKSA9PiB7XHJcbi8vIFx0aWYgKGJvZHkuaWQgPT09ICdjb250YWN0LXBhZ2UnKSB7XHJcbi8vIFx0XHRjb25zdCBuYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI25hbWUnKTtcclxuLy8gXHRcdGNvbnN0IGVtYWlsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2VtYWlsJyk7XHJcbi8vIFx0XHRjb25zdCBlbWFpbExhYmVsID0gZW1haWwubmV4dEVsZW1lbnRTaWJsaW5nO1xyXG4vLyBcdFx0Y29uc3QgbXNnID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI21zZycpO1xyXG4vLyBcdFx0Y29uc3QgY2xlYXJCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY2xlYXItYnRuJyk7XHJcbi8vIFx0XHRjb25zdCBzZW5kQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNlbmQtYnRuJyk7XHJcbi8vIFx0XHRsZXQgZXJyb3JUZXh0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnZm9ybS1ib3hfX2Vycm9yLXRleHQnKTtcclxuLy8gXHRcdGNvbnN0IHNlbmRpbmdNc2cgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2VuZGluZy1tc2cnKTtcclxuLy8gXHRcdGNvbnN0IGNoZWNrYm94ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFncmVlbWVudC1ib3hfX2NoZWNrYm94Jyk7XHJcbi8vIFx0XHRjb25zdCBhbGxFcnJvcnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuZm9ybS1ib3hfX2Vycm9yLXRleHQnKTtcclxuLy8gXHRcdGxldCBjb3JyZWN0RmllbGRzQXJyYXkgPSBbXTtcclxuLy8gXHRcdGNoZWNrYm94LmNoZWNrZWQgPSBmYWxzZTtcclxuXHJcbi8vIFx0XHQvLyBGVU5DVElPTiBDSEVDS1MgQUxMIElOUFVUUyBMRU5HVEggQU5EIE1BVENIRVMgSUQgV0lUSCBTRVJJQUwgTlIgVE8gQ09OTkVDVCBXSVRIIFJJR0hUIGVycm9yVGV4dCBVTkRFUiBJTlBVVC4gRk9SIEVBQ0ggSU5QVVQgQVJFIERFRElDQVRFRCBFUlJPUiBNRVNTQUdFUy4gV0hFTiBFUlJPUiBESVNBUFBFQVJTIEZVTkNUSU9OIFBVU0hFUyBbMV0gVE8gY29ycmVjdEZpZWxkc0FycmF5LiAzIEVMRU1FTlRTID0gU1VDQ0VTU1xyXG4vLyBcdFx0Ly8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyBcdFx0Y29uc3QgZW5naW5lID0gKGlkLCBzZXJpYWwsIHZhbHVlTWluTGVuZ3RoLCBtc2dlcnJvcikgPT4ge1xyXG4vLyBcdFx0XHRjb25zdCBpbm5lclZhbHVlID0gaWQudmFsdWU7XHJcbi8vIFx0XHRcdGlmIChcclxuLy8gXHRcdFx0XHRpbm5lclZhbHVlLnRyaW0oKSA9PT0gJycgfHxcclxuLy8gXHRcdFx0XHRpbm5lclZhbHVlLnRyaW0oKS5sZW5ndGggPCB2YWx1ZU1pbkxlbmd0aFxyXG4vLyBcdFx0XHQpIHtcclxuLy8gXHRcdFx0XHRlcnJvclRleHRbc2VyaWFsXS50ZXh0Q29udGVudCA9IG1zZ2Vycm9yO1xyXG4vLyBcdFx0XHRcdGVycm9yVGV4dFtzZXJpYWxdLnN0eWxlLm9wYWNpdHkgPSAnMSc7XHJcbi8vIFx0XHRcdFx0cmV0dXJuO1xyXG4vLyBcdFx0XHR9XHJcbi8vIFx0XHRcdGlmIChpZCA9PT0gZW1haWwpIHtcclxuLy8gXHRcdFx0XHRjaGVja0VtYWlsKGlkLCBzZXJpYWwpO1xyXG4vLyBcdFx0XHRcdHJldHVybjtcclxuLy8gXHRcdFx0fVxyXG4vLyBcdFx0XHRlcnJvclRleHRbc2VyaWFsXS5zdHlsZS5vcGFjaXR5ID0gJzAnO1xyXG4vLyBcdFx0XHRjb3JyZWN0RmllbGRzQXJyYXkucHVzaCgxKTtcclxuLy8gXHRcdH07XHJcblxyXG4vLyBcdFx0Ly8gUkVHRVggRk9SIEVNQUlMXHJcbi8vIFx0XHQvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vIFx0XHRjb25zdCBjaGVja0VtYWlsID0gKGlkLCBzZXJpYWwpID0+IHtcclxuLy8gXHRcdFx0Y29uc3QgcmUgPVxyXG4vLyBcdFx0XHRcdC9eKChbXjw+KClcXFtcXF1cXFxcLiw7Olxcc0BcIl0rKFxcLltePD4oKVxcW1xcXVxcXFwuLDs6XFxzQFwiXSspKil8KFwiLitcIikpQCgoXFxbWzAtOV17MSwzfVxcLlswLTldezEsM31cXC5bMC05XXsxLDN9XFwuWzAtOV17MSwzfVxcXSl8KChbYS16QS1aXFwtMC05XStcXC4pK1thLXpBLVpdezIsfSkpJC87XHJcblxyXG4vLyBcdFx0XHRpZiAocmUudGVzdChpZC52YWx1ZSkpIHtcclxuLy8gXHRcdFx0XHRlcnJvclRleHRbc2VyaWFsXS5zdHlsZS5vcGFjaXR5ID0gJzAnO1xyXG4vLyBcdFx0XHRcdGNvcnJlY3RGaWVsZHNBcnJheS5wdXNoKDEpO1xyXG4vLyBcdFx0XHR9IGVsc2Uge1xyXG4vLyBcdFx0XHRcdGVycm9yVGV4dFtzZXJpYWxdLnRleHRDb250ZW50ID0gJ0VtYWlsIG5pZSBqZXN0IHBvcHJhd255JztcclxuLy8gXHRcdFx0XHRlcnJvclRleHRbc2VyaWFsXS5zdHlsZS5vcGFjaXR5ID0gJzEnO1xyXG4vLyBcdFx0XHR9XHJcbi8vIFx0XHR9O1xyXG5cclxuLy8gXHRcdGNvbnN0IGNsZWFyU3R1ZmYgPSAoKSA9PiB7XHJcbi8vIFx0XHRcdFtuYW1lLCBlbWFpbCwgbXNnXS5mb3JFYWNoKChpdGVtKSA9PiB7XHJcbi8vIFx0XHRcdFx0aXRlbS52YWx1ZSA9ICcnO1xyXG4vLyBcdFx0XHRcdGFsbEVycm9ycy5mb3JFYWNoKChlbCkgPT4ge1xyXG4vLyBcdFx0XHRcdFx0ZWwuc3R5bGUub3BhY2l0eSA9ICcwJztcclxuLy8gXHRcdFx0XHR9KTtcclxuLy8gXHRcdFx0fSk7XHJcbi8vIFx0XHRcdGNoZWNrYm94LmNsYXNzTGlzdC5yZW1vdmUoJ2NoZWNrYm94LWVycm9yJyk7XHJcbi8vIFx0XHRcdGNoZWNrYm94LmNoZWNrZWQgPSBmYWxzZTtcclxuLy8gXHRcdH07XHJcblxyXG4vLyBcdFx0Y29uc3QgY2hlY2tib3hDb250cm9sID0gKCkgPT4ge1xyXG4vLyBcdFx0XHRpZiAoY2hlY2tib3guY2hlY2tlZCA9PT0gdHJ1ZSkge1xyXG4vLyBcdFx0XHRcdGNoZWNrYm94LmNsYXNzTGlzdC5yZW1vdmUoJ2NoZWNrYm94LWVycm9yJyk7XHJcbi8vIFx0XHRcdH0gZWxzZSB7XHJcbi8vIFx0XHRcdFx0Y2hlY2tib3guY2xhc3NMaXN0LmFkZCgnY2hlY2tib3gtZXJyb3InKTtcclxuLy8gXHRcdFx0fVxyXG4vLyBcdFx0fTtcclxuXHJcbi8vIFx0XHQvLyBDT05UQUNULVBBR0UgTElTVEVORVJTXHJcbi8vIFx0XHQvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vIFx0XHRib2R5Lm9ubG9hZCA9IGNsZWFyU3R1ZmYoKTtcclxuLy8gXHRcdGNsZWFyQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcclxuLy8gXHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4vLyBcdFx0XHRjbGVhclN0dWZmKCk7XHJcbi8vIFx0XHR9KTtcclxuLy8gXHRcdHNlbmRCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xyXG4vLyBcdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XHJcbi8vIFx0XHRcdGNvcnJlY3RGaWVsZHNBcnJheSA9IFtdO1xyXG4vLyBcdFx0XHRzZW5kaW5nTXNnLmNsYXNzTGlzdC5yZW1vdmUoJ2FmdGVyU2VuZGluZ01zZycpO1xyXG4vLyBcdFx0XHRlbmdpbmUobmFtZSwgMCwgMywgJ1dwcm93YWTFuiBzd29qZSBpbWnEmSwgbWluLiAzIHpuYWtpJyk7XHJcbi8vIFx0XHRcdGVuZ2luZShlbWFpbCwgMSwgNywgJ1dwcm93YWTFuiBhZHJlcyBtYWlsb3d5Jyk7XHJcbi8vIFx0XHRcdGVuZ2luZShtc2csIDIsIDMwLCAnV3Byb3dhZMW6IHRyZcWbxIcgd2lhZG9tb8WbY2ksIG1pbi4gMzAgem5ha8OzdycpO1xyXG4vLyBcdFx0XHRjaGVja2JveENvbnRyb2woKTtcclxuLy8gXHRcdFx0aWYgKChjb3JyZWN0RmllbGRzQXJyYXkubGVuZ3RoID09PSAzKSAmIChjaGVja2JveC5jaGVja2VkID09PSB0cnVlKSkge1xyXG4vLyBcdFx0XHRcdGNsZWFyU3R1ZmYoKTtcclxuLy8gXHRcdFx0XHRzZW5kaW5nTXNnLmNsYXNzTGlzdC5hZGQoJ2FmdGVyU2VuZGluZ01zZycpO1xyXG4vLyBcdFx0XHR9XHJcbi8vIFx0XHR9KTtcclxuLy8gXHRcdC8vIExBQkVMIEZMT0FUSU5HIEhBTkRMRSBGT1IgSU5QVVQgVFlQRSA9ICdFTUFJTCdcclxuLy8gXHRcdC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gXHRcdGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcclxuLy8gXHRcdFx0aWYgKGUudGFyZ2V0ID09PSBlbWFpbCkge1xyXG4vLyBcdFx0XHRcdGVtYWlsTGFiZWwuc3R5bGUudG9wID0gJy0ycHgnO1xyXG4vLyBcdFx0XHR9IGVsc2UgaWYgKGUudGFyZ2V0ICE9PSBlbWFpbCAmJiBlbWFpbC52YWx1ZSA9PT0gJycpIHtcclxuLy8gXHRcdFx0XHRlbWFpbExhYmVsLnN0eWxlLnRvcCA9ICcyMXB4JztcclxuLy8gXHRcdFx0fVxyXG4vLyBcdFx0fSk7XHJcbi8vIFx0XHRkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXl1cCcsIChlKSA9PiB7XHJcbi8vIFx0XHRcdGlmIChlLnRhcmdldCA9PT0gZW1haWwpIHtcclxuLy8gXHRcdFx0XHRlbWFpbExhYmVsLnN0eWxlLnRvcCA9ICctMnB4JztcclxuLy8gXHRcdFx0fSBlbHNlIGlmIChlLnRhcmdldCAhPT0gZW1haWwgJiYgZW1haWwudmFsdWUgPT09ICcnKSB7XHJcbi8vIFx0XHRcdFx0ZW1haWxMYWJlbC5zdHlsZS50b3AgPSAnMjFweCc7XHJcbi8vIFx0XHRcdH1cclxuLy8gXHRcdH0pO1xyXG4vLyBcdH1cclxuLy8gfTtcclxuXHJcbi8vIE1BSU4gTElTVEVORVJTXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuYnVyZ2VyQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG5cdGJvZHkuY2xhc3NMaXN0LnRvZ2dsZSgnYm9keUhpZGRlbicpO1xyXG5cdHNpZGVNZW51LmNsYXNzTGlzdC50b2dnbGUoJ3Nob3cnKTtcclxuXHRtZW51T3BlbiA9ICFtZW51T3BlbjtcclxuXHRidXJnZXJCdG4uY2xhc3NMaXN0LnRvZ2dsZSgnb3BlbicsIG1lbnVPcGVuKTtcclxufSk7XHJcbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XHJcblx0aWYgKFxyXG5cdFx0ZS50YXJnZXQgPT09IHNpZGVNZW51IHx8XHJcblx0XHRlLnRhcmdldCA9PT0gc2lkZU1lbnVOYXZMaXN0IHx8XHJcblx0XHRlLnRhcmdldCA9PT0gbmF2IHx8XHJcblx0XHRlLnRhcmdldCA9PT0gbG9nb1xyXG5cdCkge1xyXG5cdFx0Y2xvc2luZ1NpZGVNZW51KCk7XHJcblx0fVxyXG59KTtcclxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIGhhbmRsZVNjcm9sbFNweSk7XHJcbmNvb2tpZUJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGhhbmRsZUNvb2tpZUJveCk7XHJcbnNpZGVNZW51TGlzdExpbmsuZm9yRWFjaCgobGluaykgPT5cclxuXHRsaW5rLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgY2xvc2luZ1NpZGVNZW51KVxyXG4pO1xyXG5cclxuLy8gTUFJTiBGVU5DVElPTlMgQVQgU1RBUlRcclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vIHdoYXRzUGFnZSgpO1xyXG5zaG93WWVhcigpO1xyXG5zaG93Q29va2llKCk7XHJcbiJdfQ==
